// SPDX-License-Identifier: MIT
pragma solidity 0.8.19;

import "@openzeppelin/contracts/access/Ownable.sol";

contract WithBlockedList is Ownable {
    /**
     * @dev Reverts if called by a blocked account
     */
    modifier onlyNotBlocked() {
        require(
            !isBlocked[_msgSender()],
            "Blocked: transfers are blocked for user"
        );
        _;
    }

    mapping(address => bool) public isBlocked;

    function addToBlockedList(address _user) public onlyOwner {
        isBlocked[_user] = true;
        emit BlockPlaced(_user);
    }

    function removeFromBlockedList(address _user) public onlyOwner {
        isBlocked[_user] = false;
        emit BlockReleased(_user);
    }

    event BlockPlaced(address indexed _user);

    event BlockReleased(address indexed _user);
}
